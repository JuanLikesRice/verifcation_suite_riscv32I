$date
	Mon Nov 25 18:09:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_core_swc_wrapper $end
$var wire 4 ! cycle_cnt [3:0] $end
$var wire 32 " dtcm_hrdata [31:0] $end
$var wire 1 # dtcm_hready $end
$var wire 1 $ dtcm_hresp $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 32 ' itcm_hrdata [31:0] $end
$var wire 1 ( itcm_hready $end
$var wire 1 ) itcm_hresp $end
$var wire 1 * itcm_ready $end
$var wire 3 + mau_hburst [2:0] $end
$var wire 1 , mau_hmastlock $end
$var wire 32 - pc_wdata [31:0] $end
$var wire 32 . pc_wdata_out [31:0] $end
$var wire 1 / pc_write $end
$var wire 1 0 pc_write_out $end
$var wire 5 1 reg_raddr_1 [4:0] $end
$var wire 5 2 reg_raddr_2 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 1 4 reg_ren_2 $end
$var wire 5 5 reg_waddr [4:0] $end
$var wire 32 6 reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var wire 32 8 reg_rdata_2 [31:0] $end
$var wire 32 9 reg_rdata_1 [31:0] $end
$var wire 5 : mau_load_rd [4:0] $end
$var wire 1 ; mau_load_en $end
$var wire 32 < mau_load_data [31:0] $end
$var wire 1 = mau_hwrite $end
$var wire 32 > mau_hwdata [31:0] $end
$var wire 2 ? mau_htrans [1:0] $end
$var wire 3 @ mau_hsize [2:0] $end
$var wire 7 A mau_hprot [6:0] $end
$var wire 32 B mau_haddr [31:0] $end
$var wire 32 C ifu_pc [31:0] $end
$var wire 32 D ifu_inst_out [31:0] $end
$var wire 32 E ifu_hwdata [31:0] $end
$var wire 32 F ifu_haddr [31:0] $end
$var wire 1 G ifu_dec_stall $end
$var wire 2 H exu_store_size [1:0] $end
$var wire 1 I exu_store_en $end
$var wire 32 J exu_store_data [31:0] $end
$var wire 32 K exu_store_addr [31:0] $end
$var wire 2 L exu_load_size [1:0] $end
$var wire 1 M exu_load_sext $end
$var wire 5 N exu_load_rd [4:0] $end
$var wire 32 O exu_load_offset [31:0] $end
$var wire 1 P exu_load_en $end
$var wire 32 Q exu_load_base_addr [31:0] $end
$var wire 5 R dec_rs2 [4:0] $end
$var wire 5 S dec_rs1 [4:0] $end
$var wire 5 T dec_rd [4:0] $end
$var wire 1 U dec_lw $end
$var wire 32 V dec_inst_out [31:0] $end
$var wire 1 W dec_add $end
$scope module dut $end
$var wire 4 X cycle_cnt [3:0] $end
$var wire 32 Y dtcm_hrdata [31:0] $end
$var wire 1 # dtcm_hready $end
$var wire 1 $ dtcm_hresp $end
$var wire 1 % hclk $end
$var wire 1 Z hresp $end
$var wire 1 & hrstn $end
$var wire 3 [ ifu_hburst [2:0] $end
$var wire 1 \ ifu_hmastlock $end
$var wire 3 ] ifu_hsize [2:0] $end
$var wire 1 ^ ifu_hwrite $end
$var wire 32 _ itcm_hrdata [31:0] $end
$var wire 1 ( itcm_hready $end
$var wire 1 ) itcm_hresp $end
$var wire 1 * itcm_ready $end
$var wire 3 ` mau_hburst [2:0] $end
$var wire 1 , mau_hmastlock $end
$var wire 32 a pc_wdata [31:0] $end
$var wire 32 b pc_wdata_out [31:0] $end
$var wire 1 / pc_write $end
$var wire 1 0 pc_write_out $end
$var wire 5 c reg_raddr_1 [4:0] $end
$var wire 5 d reg_raddr_2 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 1 4 reg_ren_2 $end
$var wire 5 e reg_waddr [4:0] $end
$var wire 32 f reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var wire 32 g reg_rdata_2 [31:0] $end
$var wire 32 h reg_rdata_1 [31:0] $end
$var wire 5 i mau_load_rd [4:0] $end
$var wire 1 ; mau_load_en $end
$var wire 32 j mau_load_data [31:0] $end
$var wire 1 = mau_hwrite $end
$var wire 32 k mau_hwdata [31:0] $end
$var wire 2 l mau_htrans [1:0] $end
$var wire 3 m mau_hsize [2:0] $end
$var wire 7 n mau_hprot [6:0] $end
$var wire 32 o mau_haddr [31:0] $end
$var wire 32 p ifu_pc [31:0] $end
$var wire 32 q ifu_inst_out [31:0] $end
$var wire 1 r ifu_idle $end
$var wire 32 s ifu_hwdata [31:0] $end
$var wire 2 t ifu_htrans [1:0] $end
$var wire 7 u ifu_hprot [6:0] $end
$var wire 32 v ifu_haddr [31:0] $end
$var wire 1 G ifu_dec_stall $end
$var wire 2 w exu_store_size [1:0] $end
$var wire 1 I exu_store_en $end
$var wire 32 x exu_store_data [31:0] $end
$var wire 32 y exu_store_addr [31:0] $end
$var wire 2 z exu_load_size [1:0] $end
$var wire 1 M exu_load_sext $end
$var wire 5 { exu_load_rd [4:0] $end
$var wire 32 | exu_load_offset [31:0] $end
$var wire 1 P exu_load_en $end
$var wire 32 } exu_load_base_addr [31:0] $end
$var wire 32 ~ exu_inst_out [31:0] $end
$var wire 1 !" dec_xori $end
$var wire 1 "" dec_xor $end
$var wire 1 #" dec_upper_en $end
$var wire 1 $" dec_sw $end
$var wire 1 %" dec_sub $end
$var wire 1 &" dec_store_en $end
$var wire 1 '" dec_srli $end
$var wire 1 (" dec_srl $end
$var wire 1 )" dec_srai $end
$var wire 1 *" dec_sra $end
$var wire 1 +" dec_sltu $end
$var wire 1 ," dec_sltiu $end
$var wire 1 -" dec_slti $end
$var wire 1 ." dec_slt $end
$var wire 1 /" dec_slli $end
$var wire 1 0" dec_sll $end
$var wire 1 1" dec_sh $end
$var wire 1 2" dec_sb $end
$var wire 5 3" dec_rs2 [4:0] $end
$var wire 5 4" dec_rs1 [4:0] $end
$var wire 1 5" dec_reg_en $end
$var wire 5 6" dec_rd [4:0] $end
$var wire 1 7" dec_ori $end
$var wire 1 8" dec_or $end
$var wire 1 U dec_lw $end
$var wire 1 9" dec_lui $end
$var wire 1 :" dec_load_en $end
$var wire 1 ;" dec_lhu $end
$var wire 1 <" dec_lh $end
$var wire 1 =" dec_lbu $end
$var wire 1 >" dec_lb $end
$var wire 1 ?" dec_jump_en $end
$var wire 1 @" dec_jalr $end
$var wire 1 A" dec_jal $end
$var wire 32 B" dec_inst_out [31:0] $end
$var wire 20 C" dec_imm_type_u [19:0] $end
$var wire 12 D" dec_imm_type_s [11:0] $end
$var wire 21 E" dec_imm_type_j [20:0] $end
$var wire 12 F" dec_imm_type_i [11:0] $end
$var wire 13 G" dec_imm_type_b [12:0] $end
$var wire 1 H" dec_imm_en $end
$var wire 1 I" dec_fence_i $end
$var wire 1 J" dec_fence $end
$var wire 1 K" dec_ecall $end
$var wire 1 L" dec_ebreak $end
$var wire 1 M" dec_csrrwi $end
$var wire 1 N" dec_csrrw $end
$var wire 1 O" dec_csrrsi $end
$var wire 1 P" dec_csrrs $end
$var wire 1 Q" dec_csrrci $end
$var wire 1 R" dec_csrrc $end
$var wire 1 S" dec_branch_en $end
$var wire 1 T" dec_bne $end
$var wire 1 U" dec_bltu $end
$var wire 1 V" dec_blt $end
$var wire 1 W" dec_bgeu $end
$var wire 1 X" dec_bge $end
$var wire 1 Y" dec_beq $end
$var wire 1 Z" dec_auipc $end
$var wire 1 [" dec_andi $end
$var wire 1 \" dec_and $end
$var wire 1 ]" dec_addi $end
$var wire 1 W dec_add $end
$scope module u_dec $end
$var wire 4 ^" cycle_cnt [3:0] $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 1 _" mid_add $end
$var wire 1 `" mid_addi $end
$var wire 1 a" mid_and $end
$var wire 1 b" mid_andi $end
$var wire 1 c" mid_auipc $end
$var wire 1 d" mid_beq $end
$var wire 1 e" mid_bge $end
$var wire 1 f" mid_bgeu $end
$var wire 1 g" mid_blt $end
$var wire 1 h" mid_bltu $end
$var wire 1 i" mid_bne $end
$var wire 1 j" mid_csrrc $end
$var wire 1 k" mid_csrrci $end
$var wire 1 l" mid_csrrs $end
$var wire 1 m" mid_csrrsi $end
$var wire 1 n" mid_csrrw $end
$var wire 1 o" mid_csrrwi $end
$var wire 1 p" mid_ebreak $end
$var wire 1 q" mid_ecall $end
$var wire 1 r" mid_fence $end
$var wire 1 s" mid_fence_i $end
$var wire 1 t" mid_jal $end
$var wire 1 u" mid_jalr $end
$var wire 1 v" mid_lb $end
$var wire 1 w" mid_lbu $end
$var wire 1 x" mid_lh $end
$var wire 1 y" mid_lhu $end
$var wire 1 z" mid_lui $end
$var wire 1 {" mid_lw $end
$var wire 1 |" mid_or $end
$var wire 1 }" mid_ori $end
$var wire 1 ~" mid_sb $end
$var wire 1 !# mid_sh $end
$var wire 1 "# mid_sll $end
$var wire 1 ## mid_slli $end
$var wire 1 $# mid_slt $end
$var wire 1 %# mid_slti $end
$var wire 1 &# mid_sltiu $end
$var wire 1 '# mid_sltu $end
$var wire 1 (# mid_sra $end
$var wire 1 )# mid_srai $end
$var wire 1 *# mid_srl $end
$var wire 1 +# mid_srli $end
$var wire 1 ,# mid_sub $end
$var wire 1 -# mid_sw $end
$var wire 1 .# mid_xor $end
$var wire 1 /# mid_xori $end
$var wire 32 0# inst_in [31:0] $end
$var wire 1 G ifu_dec_stall $end
$var reg 1 W dec_add $end
$var reg 1 ]" dec_addi $end
$var reg 1 \" dec_and $end
$var reg 1 [" dec_andi $end
$var reg 1 Z" dec_auipc $end
$var reg 1 Y" dec_beq $end
$var reg 1 X" dec_bge $end
$var reg 1 W" dec_bgeu $end
$var reg 1 V" dec_blt $end
$var reg 1 U" dec_bltu $end
$var reg 1 T" dec_bne $end
$var reg 1 S" dec_branch_en $end
$var reg 1 R" dec_csrrc $end
$var reg 1 Q" dec_csrrci $end
$var reg 1 P" dec_csrrs $end
$var reg 1 O" dec_csrrsi $end
$var reg 1 N" dec_csrrw $end
$var reg 1 M" dec_csrrwi $end
$var reg 1 L" dec_ebreak $end
$var reg 1 K" dec_ecall $end
$var reg 1 J" dec_fence $end
$var reg 1 I" dec_fence_i $end
$var reg 1 H" dec_imm_en $end
$var reg 13 1# dec_imm_type_b [12:0] $end
$var reg 12 2# dec_imm_type_i [11:0] $end
$var reg 21 3# dec_imm_type_j [20:0] $end
$var reg 12 4# dec_imm_type_s [11:0] $end
$var reg 20 5# dec_imm_type_u [19:0] $end
$var reg 1 A" dec_jal $end
$var reg 1 @" dec_jalr $end
$var reg 1 ?" dec_jump_en $end
$var reg 1 >" dec_lb $end
$var reg 1 =" dec_lbu $end
$var reg 1 <" dec_lh $end
$var reg 1 ;" dec_lhu $end
$var reg 1 :" dec_load_en $end
$var reg 1 9" dec_lui $end
$var reg 1 U dec_lw $end
$var reg 1 8" dec_or $end
$var reg 1 7" dec_ori $end
$var reg 5 6# dec_rd [4:0] $end
$var reg 1 5" dec_reg_en $end
$var reg 5 7# dec_rs1 [4:0] $end
$var reg 5 8# dec_rs2 [4:0] $end
$var reg 1 2" dec_sb $end
$var reg 1 1" dec_sh $end
$var reg 1 0" dec_sll $end
$var reg 1 /" dec_slli $end
$var reg 1 ." dec_slt $end
$var reg 1 -" dec_slti $end
$var reg 1 ," dec_sltiu $end
$var reg 1 +" dec_sltu $end
$var reg 1 *" dec_sra $end
$var reg 1 )" dec_srai $end
$var reg 1 (" dec_srl $end
$var reg 1 '" dec_srli $end
$var reg 1 &" dec_store_en $end
$var reg 1 %" dec_sub $end
$var reg 1 $" dec_sw $end
$var reg 1 #" dec_upper_en $end
$var reg 1 "" dec_xor $end
$var reg 1 !" dec_xori $end
$var reg 5 9# inst_11_7 [4:0] $end
$var reg 1 :# inst_11_7_equal_00000 $end
$var reg 3 ;# inst_14_12 [2:0] $end
$var reg 1 <# inst_14_12_equal_000 $end
$var reg 1 =# inst_14_12_equal_001 $end
$var reg 1 ># inst_14_12_equal_010 $end
$var reg 1 ?# inst_14_12_equal_011 $end
$var reg 1 @# inst_14_12_equal_100 $end
$var reg 1 A# inst_14_12_equal_101 $end
$var reg 1 B# inst_14_12_equal_110 $end
$var reg 1 C# inst_14_12_equal_111 $end
$var reg 5 D# inst_19_15 [4:0] $end
$var reg 1 E# inst_19_15_equal_00000 $end
$var reg 12 F# inst_31_20 [11:0] $end
$var reg 1 G# inst_31_20_equal_000000000000 $end
$var reg 1 H# inst_31_20_equal_000000000001 $end
$var reg 7 I# inst_31_25 [6:0] $end
$var reg 1 J# inst_31_25_equal_0000000 $end
$var reg 1 K# inst_31_25_equal_0100000 $end
$var reg 4 L# inst_31_28 [3:0] $end
$var reg 1 M# inst_31_28_equal_0000 $end
$var reg 7 N# inst_6_0 [6:0] $end
$var reg 1 O# inst_6_0_equal_0000011 $end
$var reg 1 P# inst_6_0_equal_0001111 $end
$var reg 1 Q# inst_6_0_equal_0010011 $end
$var reg 1 R# inst_6_0_equal_0010111 $end
$var reg 1 S# inst_6_0_equal_0100011 $end
$var reg 1 T# inst_6_0_equal_0110011 $end
$var reg 1 U# inst_6_0_equal_0110111 $end
$var reg 1 V# inst_6_0_equal_1100011 $end
$var reg 1 W# inst_6_0_equal_1100111 $end
$var reg 1 X# inst_6_0_equal_1101111 $end
$var reg 1 Y# inst_6_0_equal_1110011 $end
$var reg 32 Z# inst_out [31:0] $end
$upscope $end
$scope module u_exu $end
$var wire 4 [# cycle_cnt [3:0] $end
$var wire 1 W dec_add $end
$var wire 1 ]" dec_addi $end
$var wire 1 \" dec_and $end
$var wire 1 [" dec_andi $end
$var wire 1 Z" dec_auipc $end
$var wire 1 Y" dec_beq $end
$var wire 1 X" dec_bge $end
$var wire 1 W" dec_bgeu $end
$var wire 1 V" dec_blt $end
$var wire 1 U" dec_bltu $end
$var wire 1 T" dec_bne $end
$var wire 1 S" dec_branch_en $end
$var wire 1 R" dec_csrrc $end
$var wire 1 Q" dec_csrrci $end
$var wire 1 P" dec_csrrs $end
$var wire 1 O" dec_csrrsi $end
$var wire 1 N" dec_csrrw $end
$var wire 1 M" dec_csrrwi $end
$var wire 1 L" dec_ebreak $end
$var wire 1 K" dec_ecall $end
$var wire 1 J" dec_fence $end
$var wire 1 I" dec_fence_i $end
$var wire 1 H" dec_imm_en $end
$var wire 13 \# dec_imm_type_b [12:0] $end
$var wire 12 ]# dec_imm_type_i [11:0] $end
$var wire 21 ^# dec_imm_type_j [20:0] $end
$var wire 12 _# dec_imm_type_s [11:0] $end
$var wire 20 `# dec_imm_type_u [19:0] $end
$var wire 1 A" dec_jal $end
$var wire 1 @" dec_jalr $end
$var wire 1 ?" dec_jump_en $end
$var wire 1 >" dec_lb $end
$var wire 1 =" dec_lbu $end
$var wire 1 <" dec_lh $end
$var wire 1 ;" dec_lhu $end
$var wire 1 :" dec_load_en $end
$var wire 1 9" dec_lui $end
$var wire 1 U dec_lw $end
$var wire 1 8" dec_or $end
$var wire 1 7" dec_ori $end
$var wire 5 a# dec_rd [4:0] $end
$var wire 1 5" dec_reg_en $end
$var wire 5 b# dec_rs1 [4:0] $end
$var wire 5 c# dec_rs2 [4:0] $end
$var wire 1 2" dec_sb $end
$var wire 1 1" dec_sh $end
$var wire 1 0" dec_sll $end
$var wire 1 /" dec_slli $end
$var wire 1 ." dec_slt $end
$var wire 1 -" dec_slti $end
$var wire 1 ," dec_sltiu $end
$var wire 1 +" dec_sltu $end
$var wire 1 *" dec_sra $end
$var wire 1 )" dec_srai $end
$var wire 1 (" dec_srl $end
$var wire 1 '" dec_srli $end
$var wire 1 &" dec_store_en $end
$var wire 1 %" dec_sub $end
$var wire 1 $" dec_sw $end
$var wire 1 #" dec_upper_en $end
$var wire 1 "" dec_xor $end
$var wire 1 !" dec_xori $end
$var wire 1 d# exu_stall $end
$var wire 2 e# flush [1:0] $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 32 f# inst_in [31:0] $end
$var wire 32 g# pc_wdata [31:0] $end
$var wire 1 0 pc_write $end
$var wire 5 h# reg_raddr_1 [4:0] $end
$var wire 5 i# reg_raddr_2 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 1 4 reg_ren_2 $end
$var wire 5 j# reg_waddr [4:0] $end
$var wire 32 k# reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var wire 32 l# reg_rdata_2 [31:0] $end
$var wire 32 m# reg_rdata_1 [31:0] $end
$var wire 32 n# pc [31:0] $end
$var wire 1 G ifu_dec_stall $end
$var wire 1 o# flush_stall $end
$var wire 2 p# exu_store_size [1:0] $end
$var wire 1 I exu_store_en $end
$var wire 32 q# exu_store_data [31:0] $end
$var wire 32 r# exu_store_addr [31:0] $end
$var wire 2 s# exu_load_size [1:0] $end
$var wire 1 M exu_load_sext $end
$var wire 5 t# exu_load_rd [4:0] $end
$var wire 32 u# exu_load_offset [31:0] $end
$var wire 1 P exu_load_en $end
$var wire 32 v# exu_load_base_addr [31:0] $end
$var reg 32 w# inst_out [31:0] $end
$scope module ex_flush_swc_inst $end
$var wire 4 x# cycle_cnt [3:0] $end
$var wire 2 y# flush [1:0] $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var parameter 32 z# FLUSH_CYCLE_1 $end
$var parameter 32 {# FLUSH_CYCLE_2 $end
$var parameter 32 |# FLUSH_DISABLE $end
$var parameter 32 }# IDLE $end
$var parameter 32 ~# STATE_1 $end
$var parameter 32 !$ STATE_2 $end
$var reg 1 o# flush_stall $end
$var reg 2 "$ nextstate [1:0] $end
$var reg 2 #$ state [1:0] $end
$upscope $end
$scope module ex_imm_en_inst $end
$var wire 4 $$ cycle_cnt [3:0] $end
$var wire 1 ]" dec_addi $end
$var wire 1 [" dec_andi $end
$var wire 1 %$ dec_branch_en $end
$var wire 12 &$ dec_imm_type_i [11:0] $end
$var wire 1 7" dec_ori $end
$var wire 5 '$ dec_rd [4:0] $end
$var wire 5 ($ dec_rs1 [4:0] $end
$var wire 1 /" dec_slli $end
$var wire 1 -" dec_slti $end
$var wire 1 ," dec_sltiu $end
$var wire 1 )" dec_srai $end
$var wire 1 '" dec_srli $end
$var wire 1 !" dec_xori $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 5 )$ reg_raddr_1 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 5 *$ reg_waddr [4:0] $end
$var wire 32 +$ reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var wire 32 ,$ reg_rdata_1 [31:0] $end
$var wire 32 -$ pc [31:0] $end
$var reg 5 .$ mid_reg_raddr_1 [4:0] $end
$var reg 1 /$ mid_reg_ren_1 $end
$var reg 5 0$ mid_reg_waddr [4:0] $end
$var reg 32 1$ mid_reg_wdata [31:0] $end
$var reg 1 2$ mid_reg_wen $end
$upscope $end
$scope module exu_branch_swc_inst $end
$var wire 4 3$ cycle_cnt [3:0] $end
$var wire 1 Y" dec_beq $end
$var wire 1 X" dec_bge $end
$var wire 1 W" dec_bgeu $end
$var wire 1 V" dec_blt $end
$var wire 1 U" dec_bltu $end
$var wire 1 T" dec_bne $end
$var wire 1 4$ dec_branch_en $end
$var wire 13 5$ dec_imm_type_b [12:0] $end
$var wire 5 6$ dec_rs1 [4:0] $end
$var wire 5 7$ dec_rs2 [4:0] $end
$var wire 2 8$ flush [1:0] $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 32 9$ pc_wdata [31:0] $end
$var wire 1 0 pc_write $end
$var wire 5 :$ reg_raddr_1 [4:0] $end
$var wire 5 ;$ reg_raddr_2 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 1 4 reg_ren_2 $end
$var wire 32 <$ sext_imm_type_b [31:0] $end
$var wire 32 =$ reg_rdata_2 [31:0] $end
$var wire 32 >$ reg_rdata_1 [31:0] $end
$var wire 32 ?$ pc_real [31:0] $end
$var wire 32 @$ pc_next [31:0] $end
$var wire 32 A$ pc [31:0] $end
$var wire 1 B$ branch $end
$var parameter 32 C$ FLUSH_CYCLE_1 $end
$var parameter 32 D$ FLUSH_CYCLE_2 $end
$var parameter 32 E$ FLUSH_DISABLE $end
$var reg 2 F$ mid_flush [1:0] $end
$var reg 32 G$ mid_pc_wdata [31:0] $end
$var reg 1 H$ mid_pc_write $end
$var reg 5 I$ mid_reg_raddr_1 [4:0] $end
$var reg 5 J$ mid_reg_raddr_2 [4:0] $end
$var reg 1 K$ mid_reg_ren_1 $end
$var reg 1 L$ mid_reg_ren_2 $end
$upscope $end
$scope module exu_jump_swc_inst $end
$var wire 4 M$ cycle_cnt [3:0] $end
$var wire 12 N$ dec_imm_type_i [11:0] $end
$var wire 21 O$ dec_imm_type_j [20:0] $end
$var wire 1 A" dec_jal $end
$var wire 1 @" dec_jalr $end
$var wire 1 P$ dec_jump_en $end
$var wire 5 Q$ dec_rd [4:0] $end
$var wire 5 R$ dec_rs1 [4:0] $end
$var wire 2 S$ flush [1:0] $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 32 T$ pc_wdata [31:0] $end
$var wire 1 0 pc_write $end
$var wire 5 U$ reg_raddr_1 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 5 V$ reg_waddr [4:0] $end
$var wire 32 W$ reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var wire 32 X$ sext_imm_type_j [31:0] $end
$var wire 32 Y$ sext_imm_type_i [31:0] $end
$var wire 32 Z$ reg_rdata_1 [31:0] $end
$var wire 32 [$ pc_real [31:0] $end
$var wire 32 \$ pc_next [31:0] $end
$var wire 32 ]$ pc [31:0] $end
$var parameter 32 ^$ FLUSH_CYCLE_1 $end
$var parameter 32 _$ FLUSH_CYCLE_2 $end
$var parameter 32 `$ FLUSH_DISABLE $end
$var reg 2 a$ mid_flush [1:0] $end
$var reg 32 b$ mid_pc_wdata [31:0] $end
$var reg 1 c$ mid_pc_write $end
$var reg 5 d$ mid_reg_raddr_1 [4:0] $end
$var reg 1 e$ mid_reg_ren_1 $end
$var reg 5 f$ mid_reg_waddr [4:0] $end
$var reg 32 g$ mid_reg_wdata [31:0] $end
$var reg 1 h$ mid_reg_wen $end
$upscope $end
$scope module exu_load_swc_inst $end
$var wire 4 i$ cycle_cnt [3:0] $end
$var wire 12 j$ dec_imm_type_i [11:0] $end
$var wire 1 >" dec_lb $end
$var wire 1 =" dec_lbu $end
$var wire 1 <" dec_lh $end
$var wire 1 ;" dec_lhu $end
$var wire 1 k$ dec_load_en $end
$var wire 1 U dec_lw $end
$var wire 5 l$ dec_rd [4:0] $end
$var wire 5 m$ dec_rs1 [4:0] $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 1 G ifu_dec_stall $end
$var wire 5 n$ reg_raddr_1 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 32 o$ reg_rdata_1 [31:0] $end
$var parameter 32 p$ LOAD_BTYE $end
$var parameter 32 q$ LOAD_HALFWORD $end
$var parameter 32 r$ LOAD_IDLE $end
$var parameter 32 s$ LOAD_WORD $end
$var reg 32 t$ exu_load_base_addr [31:0] $end
$var reg 32 u$ exu_load_base_addr_buff [31:0] $end
$var reg 1 P exu_load_en $end
$var reg 1 v$ exu_load_en_buff $end
$var reg 32 w$ exu_load_offset [31:0] $end
$var reg 32 x$ exu_load_offset_buff [31:0] $end
$var reg 5 y$ exu_load_rd [4:0] $end
$var reg 5 z$ exu_load_rd_buff [4:0] $end
$var reg 1 M exu_load_sext $end
$var reg 1 {$ exu_load_sext_buff $end
$var reg 2 |$ exu_load_size [1:0] $end
$var reg 2 }$ exu_load_size_buff [1:0] $end
$var reg 5 ~$ mid_reg_raddr_1 [4:0] $end
$var reg 1 !% mid_reg_ren_1 $end
$upscope $end
$scope module exu_reg_swc_inst $end
$var wire 4 "% cycle_cnt [3:0] $end
$var wire 1 W dec_add $end
$var wire 1 \" dec_and $end
$var wire 1 8" dec_or $end
$var wire 5 #% dec_rd [4:0] $end
$var wire 5 $% dec_rs1 [4:0] $end
$var wire 5 %% dec_rs2 [4:0] $end
$var wire 1 0" dec_sll $end
$var wire 1 ." dec_slt $end
$var wire 1 +" dec_sltu $end
$var wire 1 *" dec_sra $end
$var wire 1 (" dec_srl $end
$var wire 1 %" dec_sub $end
$var wire 1 "" dec_xor $end
$var wire 1 5" en $end
$var wire 1 d# exu_stall $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 5 &% reg_raddr_1 [4:0] $end
$var wire 5 '% reg_raddr_2 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 1 4 reg_ren_2 $end
$var wire 5 (% reg_waddr [4:0] $end
$var wire 32 )% reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var wire 32 *% reg_rdata_2 [31:0] $end
$var wire 32 +% reg_rdata_1 [31:0] $end
$var wire 32 ,% pc [31:0] $end
$var reg 5 -% mid_reg_raddr_1 [4:0] $end
$var reg 5 .% mid_reg_raddr_2 [4:0] $end
$var reg 1 /% mid_reg_ren_1 $end
$var reg 1 0% mid_reg_ren_2 $end
$var reg 5 1% mid_reg_waddr [4:0] $end
$var reg 32 2% mid_reg_wdata [31:0] $end
$var reg 1 3% mid_reg_wen $end
$upscope $end
$scope module exu_store_swc_inst $end
$var wire 4 4% cycle_cnt [3:0] $end
$var wire 12 5% dec_imm_type_s [11:0] $end
$var wire 5 6% dec_rs1 [4:0] $end
$var wire 5 7% dec_rs2 [4:0] $end
$var wire 1 2" dec_sb $end
$var wire 1 1" dec_sh $end
$var wire 1 &" dec_store_en $end
$var wire 1 $" dec_sw $end
$var wire 1 d# exu_stall $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 5 8% reg_raddr_1 [4:0] $end
$var wire 5 9% reg_raddr_2 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 1 4 reg_ren_2 $end
$var wire 32 :% reg_rdata_2 [31:0] $end
$var wire 32 ;% reg_rdata_1 [31:0] $end
$var parameter 32 <% STORE_BTYE $end
$var parameter 32 =% STORE_HALFWORD $end
$var parameter 32 >% STORE_IDLE $end
$var parameter 32 ?% STORE_WORD $end
$var reg 32 @% exu_store_addr [31:0] $end
$var reg 32 A% exu_store_addr_buff [31:0] $end
$var reg 32 B% exu_store_data [31:0] $end
$var reg 32 C% exu_store_data_buff [31:0] $end
$var reg 1 I exu_store_en $end
$var reg 1 D% exu_store_en_buff $end
$var reg 2 E% exu_store_size [1:0] $end
$var reg 2 F% exu_store_size_buff [1:0] $end
$var reg 5 G% mid_reg_raddr_1 [4:0] $end
$var reg 5 H% mid_reg_raddr_2 [4:0] $end
$var reg 1 I% mid_reg_ren_1 $end
$var reg 1 J% mid_reg_ren_2 $end
$upscope $end
$scope module exu_upper_en_inst $end
$var wire 4 K% cycle_cnt [3:0] $end
$var wire 1 Z" dec_auipc $end
$var wire 20 L% dec_imm_type_u [19:0] $end
$var wire 1 9" dec_lui $end
$var wire 5 M% dec_rd [4:0] $end
$var wire 1 N% dec_upper_en $end
$var wire 1 d# exu_stall $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 5 O% reg_waddr [4:0] $end
$var wire 32 P% reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var wire 32 Q% pc [31:0] $end
$var reg 5 R% mid_reg_waddr [4:0] $end
$var reg 32 S% mid_reg_wdata [31:0] $end
$var reg 1 T% mid_reg_wen $end
$upscope $end
$upscope $end
$scope module u_ifu $end
$var wire 4 U% cycle_cnt [3:0] $end
$var wire 3 V% hburst [2:0] $end
$var wire 1 % hclk $end
$var wire 1 \ hmastlock $end
$var wire 32 W% hrdata [31:0] $end
$var wire 1 ( hready $end
$var wire 1 ) hresp $end
$var wire 1 & hrstn $end
$var wire 3 X% hsize [2:0] $end
$var wire 1 ^ hwrite $end
$var wire 1 G ifu_dec_stall $end
$var wire 1 * itcm_ready $end
$var wire 32 Y% pc_wdata [31:0] $end
$var wire 1 / pc_write $end
$var parameter 32 Z% HTRANS_BUSY $end
$var parameter 32 [% HTRANS_IDLE $end
$var parameter 32 \% HTRANS_NONSEQ $end
$var parameter 32 ]% HTRANS_SEQ $end
$var parameter 32 ^% IDLE $end
$var parameter 32 _% START $end
$var parameter 32 `% WAIT1 $end
$var parameter 32 a% WAIT2 $end
$var reg 32 b% haddr [31:0] $end
$var reg 7 c% hprot [6:0] $end
$var reg 2 d% htrans [1:0] $end
$var reg 32 e% hwdata [31:0] $end
$var reg 1 r ifu_idle $end
$var reg 32 f% inst_out [31:0] $end
$var reg 32 g% inst_out_buff [31:0] $end
$var reg 2 h% nextstate [1:0] $end
$var reg 32 i% pc [31:0] $end
$var reg 2 j% state [1:0] $end
$upscope $end
$scope module u_mau $end
$var wire 4 k% cycle_cnt [3:0] $end
$var wire 32 l% exu_load_base_addr [31:0] $end
$var wire 1 P exu_load_en $end
$var wire 32 m% exu_load_offset [31:0] $end
$var wire 5 n% exu_load_rd [4:0] $end
$var wire 1 M exu_load_sext $end
$var wire 2 o% exu_load_size [1:0] $end
$var wire 32 p% exu_store_addr [31:0] $end
$var wire 32 q% exu_store_data [31:0] $end
$var wire 1 I exu_store_en $end
$var wire 2 r% exu_store_size [1:0] $end
$var wire 3 s% hburst [2:0] $end
$var wire 1 % hclk $end
$var wire 1 , hmastlock $end
$var wire 32 t% hrdata [31:0] $end
$var wire 1 # hready $end
$var wire 1 Z hresp $end
$var wire 1 & hrstn $end
$var wire 3 u% hsize [2:0] $end
$var parameter 32 v% CNT_MAX $end
$var parameter 32 w% HTRANS_BUSY $end
$var parameter 32 x% HTRANS_IDLE $end
$var parameter 32 y% HTRANS_NONSEQ $end
$var parameter 32 z% HTRANS_SEQ $end
$var parameter 32 {% IDLE $end
$var parameter 32 |% LOAD_BTYE $end
$var parameter 32 }% LOAD_HALFWORD $end
$var parameter 32 ~% LOAD_IDLE $end
$var parameter 32 !& LOAD_WORD $end
$var parameter 32 "& READ_START $end
$var parameter 32 #& READ_WAIT1 $end
$var parameter 32 $& READ_WAIT2 $end
$var parameter 32 %& WRITE_START $end
$var parameter 32 && WRITE_WAIT $end
$var reg 32 '& haddr [31:0] $end
$var reg 7 (& hprot [6:0] $end
$var reg 2 )& htrans [1:0] $end
$var reg 32 *& hwdata [31:0] $end
$var reg 1 = hwrite $end
$var reg 32 +& mau_load_data [31:0] $end
$var reg 32 ,& mau_load_data_buff [31:0] $end
$var reg 1 ; mau_load_en $end
$var reg 5 -& mau_load_rd [4:0] $end
$var reg 5 .& mau_load_rd_buff [4:0] $end
$var reg 3 /& nextstate [2:0] $end
$var reg 3 0& state [2:0] $end
$upscope $end
$scope module u_regfile $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 5 1& reg_raddr_1 [4:0] $end
$var wire 5 2& reg_raddr_2 [4:0] $end
$var wire 1 3 reg_ren_1 $end
$var wire 1 4 reg_ren_2 $end
$var wire 5 3& reg_waddr [4:0] $end
$var wire 32 4& reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var reg 32 5& reg_rdata_1 [31:0] $end
$var reg 32 6& reg_rdata_2 [31:0] $end
$var integer 32 7& i [31:0] $end
$upscope $end
$scope module u_wbu $end
$var wire 4 8& cycle_cnt [3:0] $end
$var wire 1 % hclk $end
$var wire 1 & hrstn $end
$var wire 32 9& mau_load_data [31:0] $end
$var wire 1 ; mau_load_en $end
$var wire 5 :& mau_load_rd [4:0] $end
$var wire 5 ;& reg_waddr [4:0] $end
$var wire 32 <& reg_wdata [31:0] $end
$var wire 1 7 reg_wen $end
$var reg 5 =& mid_reg_waddr [4:0] $end
$var reg 32 >& mid_reg_wdata [31:0] $end
$var reg 1 ?& mid_reg_wen $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 &&
b100 %&
b11 $&
b10 #&
b1 "&
b11 !&
b0 ~%
b10 }%
b1 |%
b0 {%
b11 z%
b10 y%
b0 x%
b1 w%
b100 v%
b11 a%
b10 `%
b1 _%
b0 ^%
b11 ]%
b10 \%
b0 [%
b1 Z%
b10 ?%
b11 >%
b1 =%
b0 <%
b11 s$
b0 r$
b10 q$
b1 p$
b0 `$
b10 _$
b1 ^$
b0 E$
b10 D$
b1 C$
b10 !$
b1 ~#
b0 }#
b0 |#
b10 {#
b1 z#
$end
#0
$dumpvars
0?&
b0 >&
b0 =&
bz <&
bz ;&
b0 :&
b0 9&
bz 8&
b100000 7&
b0 6&
b0 5&
bz 4&
bz 3&
b0 2&
b0 1&
b0 0&
b0 /&
b0 .&
b0 -&
b0 ,&
b0 +&
b0 *&
b0 )&
bx (&
b0 '&
b0 u%
bz t%
b0 s%
b11 r%
b0 q%
b0 p%
b0 o%
b0 n%
b0 m%
b0 l%
bz k%
b0 j%
b0 i%
b0 h%
b0 g%
b0 f%
bx e%
b0 d%
bx c%
b0 b%
bz Y%
b10 X%
bz W%
b0 V%
bz U%
0T%
b0 S%
b0 R%
b0 Q%
bz P%
bz O%
0N%
b0 M%
b0 L%
bz K%
0J%
0I%
b0 H%
b0 G%
b11 F%
b11 E%
0D%
b0 C%
b0 B%
b0 A%
b0 @%
b0 ;%
b0 :%
b0 9%
b0 8%
b0 7%
b0 6%
b0 5%
bz 4%
03%
b0 2%
b0 1%
00%
0/%
b0 .%
b0 -%
b0 ,%
b0 +%
b0 *%
bz )%
bz (%
b0 '%
b0 &%
b0 %%
b0 $%
b0 #%
bz "%
0!%
b0 ~$
b0 }$
b0 |$
0{$
b0 z$
b0 y$
b0 x$
b0 w$
0v$
b0 u$
b0 t$
b0 o$
b0 n$
b0 m$
b0 l$
0k$
b0 j$
bz i$
0h$
b0 g$
b0 f$
0e$
b0 d$
0c$
b0 b$
b0 a$
b0 ]$
b0 \$
b11111111111111111111111111111000 [$
b0 Z$
b0 Y$
b0 X$
bz W$
bz V$
b0 U$
bz T$
bz S$
b0 R$
b0 Q$
0P$
b0 O$
b0 N$
bz M$
0L$
0K$
b0 J$
b0 I$
0H$
b0 G$
b0 F$
0B$
b0 A$
b11111111111111111111111111111000 @$
b11111111111111111111111111111000 ?$
b0 >$
b0 =$
b0 <$
b0 ;$
b0 :$
bz 9$
bz 8$
b0 7$
b0 6$
b0 5$
04$
bz 3$
02$
b0 1$
b0 0$
0/$
b0 .$
b0 -$
b0 ,$
bz +$
bz *$
b0 )$
b0 ($
b0 '$
b0 &$
0%$
bz $$
b0 #$
b0 "$
bz y#
bz x#
b0 w#
b0 v#
b0 u#
b0 t#
b0 s#
b0 r#
b0 q#
b11 p#
0o#
b0 n#
b0 m#
b0 l#
bz k#
bz j#
b0 i#
b0 h#
bz g#
b0 f#
bz e#
0d#
b0 c#
b0 b#
b0 a#
b0 `#
b0 _#
b0 ^#
b0 ]#
b0 \#
bz [#
b0 Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
b0 N#
0M#
b0 L#
0K#
0J#
b0 I#
0H#
0G#
b0 F#
0E#
b0 D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
b0 ;#
0:#
b0 9#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
bz ^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
b0 6"
05"
b0 4"
b0 3"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b11 w
b0 v
bx u
b0 t
bx s
0r
b0 q
b0 p
b0 o
bx n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
bz f
bz e
b0 d
b0 c
bz b
bz a
b0 `
bz _
0^
b10 ]
0\
b0 [
zZ
bz Y
bz X
0W
b0 V
0U
b0 T
b0 S
b0 R
b0 Q
0P
b0 O
b0 N
0M
b0 L
b0 K
b0 J
0I
b11 H
0G
b0 F
bx E
b0 D
b0 C
b0 B
bx A
b0 @
b0 ?
b0 >
0=
b0 <
0;
b0 :
b0 9
b0 8
z7
bz 6
bz 5
04
03
b0 2
b0 1
z0
z/
bz .
bz -
0,
b0 +
z*
z)
z(
bz '
0&
1%
z$
z#
bz "
bz !
$end
#5000
0%
#10000
b1 h%
1r
b10 @
b10 m
b10 u%
1%
b1 !
b1 X
b1 ^"
b1 [#
b1 x#
b1 $$
b1 3$
b1 M$
b1 i$
b1 "%
b1 4%
b1 K%
b1 U%
b1 k%
b1 8&
b11011110101011011011111011101111 "
b11011110101011011011111011101111 Y
b11011110101011011011111011101111 t%
b1010000100000011 '
b1010000100000011 _
b1010000100000011 W%
1#
1(
0*
0$
0)
1&
#15000
0%
#20000
b10 !
b10 X
b10 ^"
b10 [#
b10 x#
b10 $$
b10 3$
b10 M$
b10 i$
b10 "%
b10 4%
b10 K%
b10 U%
b10 k%
b10 8&
b11 h%
b1 j%
b10 t
b10 d%
0r
1%
#25000
0%
#30000
b11 !
b11 X
b11 ^"
b11 [#
b11 x#
b11 $$
b11 3$
b11 M$
b11 i$
b11 "%
b11 4%
b11 K%
b11 U%
b11 k%
b11 8&
b0 h%
1G#
1<#
1J#
1:#
1E#
1M#
b0 t
b0 d%
b11 j%
1%
#35000
0%
#40000
b100 !
b100 X
b100 ^"
b100 [#
b100 x#
b100 $$
b100 3$
b100 M$
b100 i$
b100 "%
b100 4%
b100 K%
b100 U%
b100 k%
b100 8&
b0 j%
b1010000100000011 g%
1r
1%
#45000
0%
#50000
b1 h%
b1 !
b1 X
b1 ^"
b1 [#
b1 x#
b1 $$
b1 3$
b1 M$
b1 i$
b1 "%
b1 4%
b1 K%
b1 U%
b1 k%
b1 8&
b1010000100000011 D
b1010000100000011 q
b1010000100000011 0#
b1010000100000011 f%
b11111111111111111111111111111100 [$
b11111111111111111111111111111100 @$
b11111111111111111111111111111100 ?$
b100 C
b100 p
b100 n#
b100 -$
b100 A$
b100 ]$
b100 ,%
b100 Q%
b100 i%
1%
#55000
0%
#60000
b10 !
b10 X
b10 ^"
b10 [#
b10 x#
b10 $$
b10 3$
b10 M$
b10 i$
b10 "%
b10 4%
b10 K%
b10 U%
b10 k%
b10 8&
b11 h%
b1 j%
b10 t
b10 d%
b100 F
b100 v
b100 b%
0r
b11 N#
b10 9#
b10 ;#
b1 D#
1%
#65000
0%
#70000
b11 !
b11 X
b11 ^"
b11 [#
b11 x#
b11 $$
b11 3$
b11 M$
b11 i$
b11 "%
b11 4%
b11 K%
b11 U%
b11 k%
b11 8&
1{"
b0 h%
1O#
1>#
0<#
0:#
0E#
b0 t
b0 d%
b11 j%
1%
#75000
0%
#80000
b100 !
b100 X
b100 ^"
b100 [#
b100 x#
b100 $$
b100 3$
b100 M$
b100 i$
b100 "%
b100 4%
b100 K%
b100 U%
b100 k%
b100 8&
b0 j%
1r
1%
#85000
0%
#90000
b1 h%
b1 !
b1 X
b1 ^"
b1 [#
b1 x#
b1 $$
b1 3$
b1 M$
b1 i$
b1 "%
b1 4%
b1 K%
b1 U%
b1 k%
b1 8&
1k$
b1010000100000011 V
b1010000100000011 B"
b1010000100000011 Z#
b1010000100000011 f#
1U
1:"
b1010000000000000 X$
b1010000000000000 E"
b1010000000000000 3#
b1010000000000000 ^#
b1010000000000000 O$
b1010 C"
b1010 5#
b1010 `#
b1010 L%
b10 <$
b10 G"
b10 1#
b10 \#
b10 5$
b10 D"
b10 4#
b10 _#
b10 5%
b10 T
b10 6"
b10 6#
b10 a#
b10 '$
b10 Q$
b10 l$
b10 #%
b10 M%
b1 S
b1 4"
b1 7#
b1 b#
b1 ($
b1 6$
b1 R$
b1 m$
b1 $%
b1 6%
b0 [$
b10 @$
b0 ?$
b1000 C
b1000 p
b1000 n#
b1000 -$
b1000 A$
b1000 ]$
b1000 ,%
b1000 Q%
b1000 i%
1%
#95000
0%
#100000
b10 !
b10 X
b10 ^"
b10 [#
b10 x#
b10 $$
b10 3$
b10 M$
b10 i$
b10 "%
b10 4%
b10 K%
b10 U%
b10 k%
b10 8&
b0x 1
b0x c
b0x h#
b0x )$
b0x :$
b0x U$
b0x n$
b0x &%
b0x 8%
b0x 1&
x3
b11 h%
1!%
b1 ~$
b1 j%
b10 t
b10 d%
b1000 F
b1000 v
b1000 b%
0r
1%
#105000
0%
#110000
b11 !
b11 X
b11 ^"
b11 [#
b11 x#
b11 $$
b11 3$
b11 M$
b11 i$
b11 "%
b11 4%
b11 K%
b11 U%
b11 k%
b11 8&
03
b0 1
b0 c
b0 h#
b0 )$
b0 :$
b0 U$
b0 n$
b0 &%
b0 8%
b0 1&
b0 h%
0!%
b0 ~$
b0 t
b0 d%
b11 j%
1%
#115000
0%
#120000
b100 !
b100 X
b100 ^"
b100 [#
b100 x#
b100 $$
b100 3$
b100 M$
b100 i$
b100 "%
b100 4%
b100 K%
b100 U%
b100 k%
b100 8&
1v$
b11 }$
1{$
b10 z$
b0 j%
1r
1%
#125000
0%
#130000
b1 h%
b1 /&
b1 !
b1 X
b1 ^"
b1 [#
b1 x#
b1 $$
b1 3$
b1 M$
b1 i$
b1 "%
b1 4%
b1 K%
b1 U%
b1 k%
b1 8&
0k$
1d#
b1010000100000011 ~
b1010000100000011 w#
1G
1P
b11 L
b11 z
b11 s#
b11 |$
b11 o%
1M
b10 N
b10 {
b10 t#
b10 y$
b10 n%
b100 [$
b110 @$
b100 ?$
b1100 C
b1100 p
b1100 n#
b1100 -$
b1100 A$
b1100 ]$
b1100 ,%
b1100 Q%
b1100 i%
1%
#135000
0%
#140000
b10 !
b10 X
b10 ^"
b10 [#
b10 x#
b10 $$
b10 3$
b10 M$
b10 i$
b10 "%
b10 4%
b10 K%
b10 U%
b10 k%
b10 8&
b11 h%
b11 /&
0U
b0 V
b0 B"
b0 Z#
b0 f#
0v$
b0 }$
0{$
b0 z$
b1 j%
b10 t
b10 d%
b1100 F
b1100 v
b1100 b%
b0 D
b0 q
b0 0#
b0 f%
0r
b0 X$
b0 E"
b0 3#
b0 ^#
b0 O$
b0 C"
b0 5#
b0 `#
b0 L%
b100 @$
b0 <$
b0 G"
b0 1#
b0 \#
b0 5$
b0 D"
b0 4#
b0 _#
b0 5%
b0 T
b0 6"
b0 6#
b0 a#
b0 '$
b0 Q$
b0 l$
b0 #%
b0 M%
b0 S
b0 4"
b0 7#
b0 b#
b0 ($
b0 6$
b0 R$
b0 m$
b0 $%
b0 6%
0:"
b1 0&
b10 ?
b10 l
b10 )&
1%
#145000
0%
#150000
b11 !
b11 X
b11 ^"
b11 [#
b11 x#
b11 $$
b11 3$
b11 M$
b11 i$
b11 "%
b11 4%
b11 K%
b11 U%
b11 k%
b11 8&
b0 /&
b0 h%
b0 ?
b0 l
b0 )&
b11 0&
b0 t
b0 d%
b11 j%
1%
#155000
0%
#160000
b100 !
b100 X
b100 ^"
b100 [#
b100 x#
b100 $$
b100 3$
b100 M$
b100 i$
b100 "%
b100 4%
b100 K%
b100 U%
b100 k%
b100 8&
b0 j%
1r
b0 0&
b10 .&
b11011110101011011011111011101111 ,&
1%
#165000
0%
#170000
b1 h%
b1 !
b1 X
b1 ^"
b1 [#
b1 x#
b1 $$
b1 3$
b1 M$
b1 i$
b1 "%
b1 4%
b1 K%
b1 U%
b1 k%
b1 8&
0d#
b0 ~
b0 w#
0G
0P
b0 L
b0 z
b0 s#
b0 |$
b0 o%
0M
b0 N
b0 {
b0 t#
b0 y$
b0 n%
1;
b10 :
b10 i
b10 -&
b10 :&
b11011110101011011011111011101111 <
b11011110101011011011111011101111 j
b11011110101011011011111011101111 +&
b11011110101011011011111011101111 9&
b0 .&
b0 ,&
1%
#175000
0%
#180000
b10 5
b10 e
b10 j#
b10 *$
b10 V$
b10 (%
b10 O%
b10 3&
b10 ;&
17
b11011110101011011011111011101111 6
b11011110101011011011111011101111 f
b11011110101011011011111011101111 k#
b11011110101011011011111011101111 +$
b11011110101011011011111011101111 W$
b11011110101011011011111011101111 )%
b11011110101011011011111011101111 P%
b11011110101011011011111011101111 4&
b11011110101011011011111011101111 <&
b11 h%
b11011110101011011011111011101111 >&
1?&
b10 =&
b1 j%
b10 t
b10 d%
0r
b0 N#
b0 9#
b0 ;#
b0 D#
1%
#180001

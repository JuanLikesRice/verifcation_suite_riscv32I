#ifndef CONSTANTS_H
#define CONSTANTS_H

/* ===== Autogenerated: do not edit ===== */
// === BEGIN AUTOGEN (do not edit) ===
/* Auto-generated. This block will be overwritten by gen_linker.py */

#define INSTR_ORIGIN       0x00002000u
#define ROM_ORIGIN         0x00004000u
#define PERIPHERAL_ORIGIN  0x00004800u
#define DATARAM_ORIGIN     0x00005000u

#define INSTR_LENGTH_BYTES 8192u
#define ROM_LENGTH_BYTES   2048u
#define PERI_LENGTH_BYTES  2048u
#define DATA_LENGTH_BYTES  16384u

#define PERIPHERAL_SUCCESS PERIPHERAL_ORIGIN
// === END AUTOGEN ===




/* ===== Manual: safe to edit ===== */
#define PERIPHERAL_BYTE  (PERIPHERAL_SUCCESS + 0x4)
#define PERIPHERAL_BASE   PERIPHERAL_SUCCESS 
#define PERIPHERAL_S1    (PERIPHERAL_SUCCESS + 0x4)
#define PERIPHERAL_S2    (PERIPHERAL_SUCCESS + 0x8)
#define PERIPHERAL_S3    (PERIPHERAL_SUCCESS + 0xC)



// Write a value to a memory-mapped register.
static inline void write_mmio(unsigned int addr, unsigned int value) {
    volatile unsigned int *ptr = (volatile unsigned int *)addr;
    *ptr = value;
}

static inline void pass(void){
    write_mmio(PERIPHERAL_SUCCESS, 0xDEADBEEF);
    for(;;);
}

static void write_to_peripheral(int address, int value) {
    volatile int* periph_addr = (int*)(address);
    *periph_addr = value;  }

// static inline void fail(int code){
//     write_mmio(PERIPHERAL_SUCCESS_value_1, (unsigned)code);
//     write_mmio(PERIPHERAL_SUCCESS, 0xBADF00D);
//     for(;;);
//     // while (1);
// }

static void fail(int test_index) {
    write_mmio(PERIPHERAL_S2, test_index);
    write_mmio(PERIPHERAL_SUCCESS, 0xBADF00D);
    while (1);
}

#endif
